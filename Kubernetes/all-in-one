apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  labels:
    app: project-stars
spec:
  replicas: 1
  selector:
    matchLabels:
      app: project-stars
  template:
    metadata:
      labels:
        app: project-stars
    spec:
      containers:
      - name: project-stars
        image: moshelederman/project-stars
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: app-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  MYSQL_ROOT_PASSWORD: example
  MYSQL_DATABASE: testdb
  MYSQL_USER: user
  MYSQL_PASSWORD: example
  MYSQL_HOST: mysql
  MYSQL_PORT: "3306"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: example
        - name: MYSQL_DATABASE
          value: testdb
        - name: MYSQL_USER
          value: user
        - name: MYSQL_PASSWORD
          value: example
        volumeMounts:
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-sql
        configMap:
          name: mysql-init-sql
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: project-stars
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-sql
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS testdb;
    USE testdb;
    CREATE TABLE IF NOT EXISTS images (
       id_images INT AUTO_INCREMENT PRIMARY KEY,
       image_url VARCHAR(255) NOT NULL
    );

    CREATE TABLE IF NOT EXISTS visitors (
      id INT AUTO_INCREMENT PRIMARY KEY,
      visit_count INT NOT NULL DEFAULT 0
    );


    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTQpArEoEZ1VHxhyDql-WVesjhL7fvjTHu51g&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQFvu6HM8akCU-hEUkKwKyKkHwSKlle4sFBng&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSYI-PhTZDz-MQDRy1-og36KLCmUPxYC1VYZQ&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXe5cneDUCl4Q2zyo0GzSSLZt3RrsQjFF_jg&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRfdzIu068pNBUDj3ko7Gkn228JhWoyEP3oNg&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQTzHrtew1BUXh7F8GnCMcC3WorcDEFbGmC0w&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRitHhHKJ9l_Il9DS-XT4V_gPcUV6woMU1VfA&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0w5CoquU-vjC3hHLbHqqzpCUjajmnQ3njyA&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTunuv7Ntr7YxZKE8_mZFgV2-lsVnJZ4-Cb8g&s");
    INSERT INTO images (image_url) VALUES ("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQLogIQHovcRhTiSzwbmMD9a3rfbi60UOf52A&s");

    INSERT INTO visitors (visit_count) VALUES (0);

    CREATE USER IF NOT EXISTS 'user'@'%' IDENTIFIED BY 'example';

    GRANT ALL PRIVILEGES ON testdb.* TO 'user'@'%';
    FLUSH PRIVILEGES;
